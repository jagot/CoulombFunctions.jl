var documenterSearchIndex = {"docs":
[{"location":"#SphericalBesselFunctions.jl-1","page":"Home","title":"SphericalBesselFunctions.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Modules = [SphericalBesselFunctions]","category":"page"},{"location":"#SphericalBesselFunctions.bessels!-Union{Tuple{T}, Tuple{Y}, Tuple{J}, Tuple{J,J,Y,Y,T}} where T where Y where J","page":"Home","title":"SphericalBesselFunctions.bessels!","text":"bessels!(j, j′, y, y′, x)\n\nCompute all spherical Bessel (regular: j_n) and Neumann (irregular: y_n) functions and their derivatives at x and store the results in the vectors j, j′, y, y′. If only the Bessel functions or the Neumann functions are of interest, the other pair of arrays can be substituted by nothing. However, it is not possible to compute only the functions but not the derivatives, since they are generated using the following recurrence relations:\n\nbeginaligned\ng_n-1 = fracn+1x g_n + g_n\ng_n-1 = fracn-1x g_n-1 - g_n\nendaligned\n\nThese recurrence relations are employed in a downward fashion for the Bessel functions and an upward fashion for the Neumann functions.\n\nIt is assumed that all passed arrays are of the same lengths (not checked).\n\n\n\n\n\n","category":"method"},{"location":"#SphericalBesselFunctions.bessel_fraction-Union{Tuple{T}, Tuple{T,Integer}} where T","page":"Home","title":"SphericalBesselFunctions.bessel_fraction","text":"bessel_fraction(x, n)\n\nEvaluated the continued fraction for the spherical Bessel function\n\nfracj_n(x)j_n(x) =\nfracnx -\nfrac1T_n+1(x)-frac1T_n+2(x)-frac1T_k-\n\nwhere\n\nT_k(x) = frac2k+1x\n\n\n\n\n\n","category":"method"},{"location":"#SphericalBesselFunctions.lentz_thompson-Union{Tuple{T}, Tuple{T,Any,Any}} where T","page":"Home","title":"SphericalBesselFunctions.lentz_thompson","text":"lentz_thompson(b₀, a, b)\n\nLentz–Thompson algorithm for the forward evaluation of continued fractions:\n\nf_n = b_0 + fraca_1b_1+fraca_2b_2+fraca_n-1b_n-1+fraca_nb_n\n\nAs described in\n\nBarnett, A. R. (1996). The Calculation of Spherical Bessel and Coulomb Functions. In (Eds.), Computational Atomic Physics (pp. 181–202). Springer Berlin Heidelberg.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalBesselFunctions.powneg1-Tuple{Integer}","page":"Home","title":"SphericalBesselFunctions.powneg1","text":"powneg1(m)\n\nReturns an integer power of negative unity, i.e. (-)^n.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalBesselFunctions.reflect!","page":"Home","title":"SphericalBesselFunctions.reflect!","text":"reflect!(g, g′, offset=0)\n\nAffect the reflection symmetries\n\nj_n(-z) = (-)^n j_n(z) qquad\ny_n(-z) = (-)^n+1y_n(z)\n\nwhere the +1 can be added using offset.\n\n\n\n\n\n","category":"function"}]
}
